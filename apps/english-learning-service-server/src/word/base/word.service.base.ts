/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Word as PrismaWord } from "@prisma/client";

export class WordServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.WordCountArgs, "select">): Promise<number> {
    return this.prisma.word.count(args);
  }

  async words<T extends Prisma.WordFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.WordFindManyArgs>
  ): Promise<PrismaWord[]> {
    return this.prisma.word.findMany<Prisma.WordFindManyArgs>(args);
  }
  async word<T extends Prisma.WordFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.WordFindUniqueArgs>
  ): Promise<PrismaWord | null> {
    return this.prisma.word.findUnique(args);
  }
  async createWord<T extends Prisma.WordCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.WordCreateArgs>
  ): Promise<PrismaWord> {
    return this.prisma.word.create<T>(args);
  }
  async updateWord<T extends Prisma.WordUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.WordUpdateArgs>
  ): Promise<PrismaWord> {
    return this.prisma.word.update<T>(args);
  }
  async deleteWord<T extends Prisma.WordDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.WordDeleteArgs>
  ): Promise<PrismaWord> {
    return this.prisma.word.delete(args);
  }
}
